# Test db file for ads communication. 
# Macros and templates have been avoided in order to focus on showing the functionality.

record(ao,"$(P)SetICycleCounter"){
	field(DTYP,"stream")
	field(OUT,"@adsTest.proto setICycleCounter() $(PORT)")
}

record(ai,"$(P)GetICycleCounter"){
	field(DTYP,"stream")
	field(INP,"@adsTest.proto getICycleCounter() $(PORT)")
	field(SCAN,"1 second")
}

record(ao,"$(P)SetFTest"){
	field(DTYP,"stream")
	field(OUT,"@adsTest.proto setFTest() $(PORT)")
}

record(ai,"$(P)GetFTest"){
	field(DTYP,"stream")
	field(INP,"@adsTest.proto getFTest() $(PORT)")
	field(SCAN,"1 second")
}

record(ao,"$(P)SetAmplitude"){
	field(DTYP,"stream")
	field(OUT,"@adsTest.proto setAmplitude() $(PORT)")
}

record(ai,"$(P)GetAmplitude"){
	field(DTYP,"stream")
	field(INP,"@adsTest.proto getAmplitude() $(PORT)")
	field(SCAN,"1 second")
}

record(waveform,"$(P)GetFTestArray"){
	field(DTYP,"stream")
	field(INP,"@adsTest.proto getFTestArray() $(PORT)")
	field(NELM,100)
	field(SCAN,"1 second")
        field (FTVL, "DOUBLE")
}

record(waveform,"$(P)GetSTest"){
	field(DTYP,"stream")
	field(INP,"@adsTest.proto getSTest() $(PORT)")
        field(SCAN, "1 second")
	field(NELM,100)
	field(NORD,100)
        field (FTVL,"CHAR")
}

record(waveform,"$(P)GetStackedCmd"){
	field(DTYP,"stream")
	field(INP,"@adsTest.proto getStackedCmd() $(PORT)")
        field(SCAN, "1 second")
	field(NELM,100)
	field(NORD,100)
        field (FTVL,"CHAR")
}


record(ai,"$(P)GetGeneralErrorId"){
	field(DTYP,"stream")
	field(INP,"@adsTest.proto getGeneralErrorId() $(PORT)")
	field(SCAN,"1 second")
}

record(ao,"$(P)SetGeneralErrorId"){
	field(DTYP,"stream")
	field(OUT,"@adsTest.proto setGeneralErrorId() $(PORT)")
}

record(ai,"$(P)GetTestADR"){
	field(DTYP,"stream")
	field(INP,"@adsTest.proto getTestADR() $(PORT)")
	field(SCAN,"1 second")
}

record(ao,"$(P)SetTestADR"){
	field(DTYP,"stream")
	field(OUT,"@adsTest.proto setTestADR() $(PORT)")
}
