#
#    This file is part of epics-twincat-ads.
#
#    epics-twincat-ads is free software: you can redistribute it and/or modify it under the terms of the GNU Lesser General Public License as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later version.
#
#    epics-twincat-ads is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more details.
#
#    You should have received a copy of the GNU Lesser General Public License along with epics-twincat-ads. If not, see <https://www.gnu.org/licenses/>.
#

record(bi,"Motor$(VI):GetEnable"){
	field(DTYP,"stream")
	field(INP,"@DUT_AxisStatus_v0_01.proto getEnable($(P),$(VP),$(VI),$(VN)) $(PORT)")
	field(ZNAM,"FALSE")
	field(ONAM,"TRUE")
	field(SCAN,".1 second")
}

record(bi,"Motor$(VI):GetReset"){
	field(DTYP,"stream")
	field(INP,"@DUT_AxisStatus_v0_01.proto getReset($(P),$(VP),$(VI),$(VN)) $(PORT)")
	field(ZNAM,"FALSE")
	field(ONAM,"TRUE")
	field(SCAN,"I/O Intr")
}

record(bi,"Motor$(VI):GetExecute"){
	field(DTYP,"stream")
	field(INP,"@DUT_AxisStatus_v0_01.proto getExecute($(P),$(VP),$(VI),$(VN)) $(PORT)")
	field(ZNAM,"FALSE")
	field(ONAM,"TRUE")
	field(SCAN,"I/O Intr")
}

record(ai,"Motor$(VI):GetCommand"){
	field(DTYP,"stream")
	field(INP,"@DUT_AxisStatus_v0_01.proto getCommand($(P),$(VP),$(VI),$(VN)) $(PORT)")
	field(SCAN,"I/O Intr")
}

record(ai,"Motor$(VI):GetCmdData"){
	field(DTYP,"stream")
	field(INP,"@DUT_AxisStatus_v0_01.proto getCmdData($(P),$(VP),$(VI),$(VN)) $(PORT)")
	field(SCAN,"I/O Intr")
}

record(ai,"Motor$(VI):GetVelocity"){
	field(DTYP,"stream")
	field(INP,"@DUT_AxisStatus_v0_01.proto getVelocity($(P),$(VP),$(VI),$(VN)) $(PORT)")
	field(SCAN,"I/O Intr")
}

record(ai,"Motor$(VI):GetPosition"){
	field(DTYP,"stream")
	field(INP,"@DUT_AxisStatus_v0_01.proto getPosition($(P),$(VP),$(VI),$(VN)) $(PORT)")
	field(SCAN,"I/O Intr")
}

record(ai,"Motor$(VI):GetAcceleration"){
	field(DTYP,"stream")
	field(INP,"@DUT_AxisStatus_v0_01.proto getAcceleration($(P),$(VP),$(VI),$(VN)) $(PORT)")
	field(SCAN,"I/O Intr")
}

record(ai,"Motor$(VI):GetDeceleration"){
	field(DTYP,"stream")
	field(INP,"@DUT_AxisStatus_v0_01.proto getDeceleration($(P),$(VP),$(VI),$(VN)) $(PORT)")
	field(SCAN,"I/O Intr")
}

record(bi,"Motor$(VI):GetJogFwd"){
	field(DTYP,"stream")
	field(INP,"@DUT_AxisStatus_v0_01.proto getJogFwd($(P),$(VP),$(VI),$(VN)) $(PORT)")
	field(ZNAM,"FALSE")
	field(ONAM,"TRUE")
	field(SCAN,"I/O Intr")
}

record(bi,"Motor$(VI):GetJogBwd"){
	field(DTYP,"stream")
	field(INP,"@DUT_AxisStatus_v0_01.proto getJogBwd($(P),$(VP),$(VI),$(VN)) $(PORT)")
	field(ZNAM,"FALSE")
	field(ONAM,"TRUE")
	field(SCAN,"I/O Intr")
}

record(bi,"Motor$(VI):GetLimitFwd"){
	field(DTYP,"stream")
	field(INP,"@DUT_AxisStatus_v0_01.proto getLimitFwd($(P),$(VP),$(VI),$(VN)) $(PORT)")
	field(ZNAM,"FALSE")
	field(ONAM,"TRUE")
	field(SCAN,"I/O Intr")
}

record(bi,"Motor$(VI):GetLimitBwd"){
	field(DTYP,"stream")
	field(INP,"@DUT_AxisStatus_v0_01.proto getLimitBwd($(P),$(VP),$(VI),$(VN)) $(PORT)")
	field(ZNAM,"FALSE")
	field(ONAM,"TRUE")
	field(SCAN,"I/O Intr")
}

record(ai,"Motor$(VI):GetOverride"){
	field(DTYP,"stream")
	field(INP,"@DUT_AxisStatus_v0_01.proto getOverride($(P),$(VP),$(VI),$(VN)) $(PORT)")
	field(SCAN,"I/O Intr")
}

record(bi,"Motor$(VI):GetHomeSensor"){
	field(DTYP,"stream")
	field(INP,"@DUT_AxisStatus_v0_01.proto getHomeSensor($(P),$(VP),$(VI),$(VN)) $(PORT)")
	field(ZNAM,"FALSE")
	field(ONAM,"TRUE")
	field(SCAN,"I/O Intr")
}

record(bi,"Motor$(VI):GetEnabled"){
	field(DTYP,"stream")
	field(INP,"@DUT_AxisStatus_v0_01.proto getEnabled($(P),$(VP),$(VI),$(VN)) $(PORT)")
	field(ZNAM,"FALSE")
	field(ONAM,"TRUE")
	field(SCAN,"I/O Intr")
}

record(bi,"Motor$(VI):GetError"){
	field(DTYP,"stream")
	field(INP,"@DUT_AxisStatus_v0_01.proto getError($(P),$(VP),$(VI),$(VN)) $(PORT)")
	field(ZNAM,"FALSE")
	field(ONAM,"TRUE")
	field(SCAN,"I/O Intr")
}

record(ai,"Motor$(VI):GetErrorId"){
	field(DTYP,"stream")
	field(INP,"@DUT_AxisStatus_v0_01.proto getErrorId($(P),$(VP),$(VI),$(VN)) $(PORT)")
	field(SCAN,"I/O Intr")
}

record(ai,"Motor$(VI):GetActVelocity"){
	field(DTYP,"stream")
	field(INP,"@DUT_AxisStatus_v0_01.proto getActVelocity($(P),$(VP),$(VI),$(VN)) $(PORT)")
	field(SCAN,"I/O Intr")
}

record(ai,"Motor$(VI):GetActPosition"){
	field(DTYP,"stream")
	field(INP,"@DUT_AxisStatus_v0_01.proto getActPosition($(P),$(VP),$(VI),$(VN)) $(PORT)")
	field(SCAN,"I/O Intr")
}

record(ai,"Motor$(VI):GetActDiff"){
	field(DTYP,"stream")
	field(INP,"@DUT_AxisStatus_v0_01.proto getActDiff($(P),$(VP),$(VI),$(VN)) $(PORT)")
	field(SCAN,"I/O Intr")
}

record(bi,"Motor$(VI):GetHomed"){
	field(DTYP,"stream")
	field(INP,"@DUT_AxisStatus_v0_01.proto getHomed($(P),$(VP),$(VI),$(VN)) $(PORT)")
	field(ZNAM,"FALSE")
	field(ONAM,"TRUE")
	field(SCAN,"I/O Intr")
}

record(bi,"Motor$(VI):GetBusy"){
	field(DTYP,"stream")
	field(INP,"@DUT_AxisStatus_v0_01.proto getBusy($(P),$(VP),$(VI),$(VN)) $(PORT)")
	field(ZNAM,"FALSE")
	field(ONAM,"TRUE")
	field(SCAN,"I/O Intr")
}

