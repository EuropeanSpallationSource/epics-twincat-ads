#
#    This file is part of epics-twincat-ads.
#
#    epics-twincat-ads is free software: you can redistribute it and/or modify it under the terms of the GNU Lesser General Public License as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later version.
#
#    epics-twincat-ads is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more details.
#
#    You should have received a copy of the GNU Lesser General Public License along with epics-twincat-ads. If not, see <https://www.gnu.org/licenses/>.
#


record(bo,"Motor$(VI):SetEnable"){
	field(DTYP,"stream")
	field(OUT,"@FB_DriveVirtual_v1_01.proto setEnable($(P),$(VP),$(VI),$(VN)) $(PORT)")
	field(ZNAM,"FALSE")
	field(ONAM,"TRUE")
	field(FLNK,"Motor$(VI):GetEnable")
}
record(bo,"Motor$(VI):SetReset"){
	field(DTYP,"stream")
	field(OUT,"@FB_DriveVirtual_v1_01.proto setReset($(P),$(VP),$(VI),$(VN)) $(PORT)")
	field(ZNAM,"FALSE")
	field(ONAM,"TRUE")
	field(FLNK,"Motor$(VI):GetEnable")
}
record(bo,"Motor$(VI):SetExecute"){
	field(DTYP,"stream")
	field(OUT,"@FB_DriveVirtual_v1_01.proto setExecute($(P),$(VP),$(VI),$(VN)) $(PORT)")
	field(ZNAM,"FALSE")
	field(ONAM,"TRUE")
	field(FLNK,"Motor$(VI):GetEnable")
}
record(ao,"Motor$(VI):SetCommand"){
	field(DTYP,"stream")
	field(OUT,"@FB_DriveVirtual_v1_01.proto setCommand($(P),$(VP),$(VI),$(VN)) $(PORT)")
	field(FLNK,"Motor$(VI):GetEnable")
}

record(ao,"Motor$(VI):SetCmdData"){
	field(DTYP,"stream")
	field(OUT,"@FB_DriveVirtual_v1_01.proto setCmdData($(P),$(VP),$(VI),$(VN)) $(PORT)")
	field(FLNK,"Motor$(VI):GetEnable")
}

record(ao,"Motor$(VI):SetVelocity"){
	field(DTYP,"stream")
	field(OUT,"@FB_DriveVirtual_v1_01.proto setVelocity($(P),$(VP),$(VI),$(VN)) $(PORT)")
	field(FLNK,"Motor$(VI):GetEnable")
}

record(ao,"Motor$(VI):SetPosition"){
	field(DTYP,"stream")
	field(OUT,"@FB_DriveVirtual_v1_01.proto setPosition($(P),$(VP),$(VI),$(VN)) $(PORT)")
	field(FLNK,"Motor$(VI):GetEnable")
}

record(ao,"Motor$(VI):SetAcceleration"){
	field(DTYP,"stream")
	field(OUT,"@FB_DriveVirtual_v1_01.proto setAcceleration($(P),$(VP),$(VI),$(VN)) $(PORT)")
	field(FLNK,"Motor$(VI):GetEnable")
}

record(ao,"Motor$(VI):SetDeceleration"){
	field(DTYP,"stream")
	field(OUT,"@FB_DriveVirtual_v1_01.proto setDeceleration($(P),$(VP),$(VI),$(VN)) $(PORT)")
	field(FLNK,"Motor$(VI):GetEnable")
}

#record(bo,"Motor$(VI):SetJogFwd"){
#	field(DTYP,"stream")
#	field(OUT,"@FB_DriveVirtual_v1_01.proto setJogFwd($(P),$(VP),$(VI),$(VN)) $(PORT)")
#	field(ZNAM,"FALSE")
#	field(ONAM,"TRUE")
#	field(FLNK,"Motor$(VI):GetEnable")
#}
#record(bo,"Motor$(VI):SetJogBwd"){
#	field(DTYP,"stream")
#	field(OUT,"@FB_DriveVirtual_v1_01.proto setJogBwd($(P),$(VP),$(VI),$(VN)) $(PORT)")
#	field(ZNAM,"FALSE")
#	field(ONAM,"TRUE")
#	field(FLNK,"Motor$(VI):GetEnable")
#}
record(bo,"Motor$(VI):SetLimitFwd"){
	field(DTYP,"stream")
	field(OUT,"@FB_DriveVirtual_v1_01.proto setLimitFwd($(P),$(VP),$(VI),$(VN)) $(PORT)")
	field(ZNAM,"FALSE")
	field(ONAM,"TRUE")
	field(FLNK,"Motor$(VI):GetEnable")
}
record(bo,"Motor$(VI):SetLimitBwd"){
	field(DTYP,"stream")
	field(OUT,"@FB_DriveVirtual_v1_01.proto setLimitBwd($(P),$(VP),$(VI),$(VN)) $(PORT)")
	field(ZNAM,"FALSE")
	field(ONAM,"TRUE")
	field(FLNK,"Motor$(VI):GetEnable")
}
#record(ao,"Motor$(VI):SetOverride"){
#	field(DTYP,"stream")
#	field(OUT,"@FB_DriveVirtual_v1_01.proto setOverride($(P),$(VP),$(VI),$(VN)) $(PORT)")
#	field(FLNK,"Motor$(VI):GetEnable")
#}

record(bo,"Motor$(VI):SetHomeSensor"){
	field(DTYP,"stream")
	field(OUT,"@FB_DriveVirtual_v1_01.proto setHomeSensor($(P),$(VP),$(VI),$(VN)) $(PORT)")
	field(ZNAM,"FALSE")
	field(ONAM,"TRUE")
	field(FLNK,"Motor$(VI):GetEnable")
}

record(stringin,"Motor$(VI):GetErrorMessage"){
	field(DTYP,"stream")
	field(INP,"@FB_DriveVirtual_v1_01.proto getErrorMessage($(P),$(VP),$(VI),$(VN)) $(PORT)")
        field(SCAN, "1 second")
}

record(ai,"Motor$(VI):GetAxisId"){
	field(DTYP,"stream")
	field(INP,"@FB_DriveVirtual_v1_01.proto getAxisId($(P),$(VP),$(VI),$(VN)) $(PORT)")
	field(SCAN,"1 second")
}

